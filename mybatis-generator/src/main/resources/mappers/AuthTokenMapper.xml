<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learn.springauthmodel.dao.AuthTokenMapper">
  <resultMap id="BaseResultMap" type="com.learn.springauthmodel.entity.AuthToken">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="access_token" jdbcType="VARCHAR" property="accessToken" />
    <result column="access_expire" jdbcType="BIGINT" property="accessExpire" />
    <result column="token_timestamp" jdbcType="BIGINT" property="tokenTimestamp" />
    <result column="is_active" jdbcType="TINYINT" property="isActive" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from auth_token
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.learn.springauthmodel.entity.AuthToken">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into auth_token (user_id, access_token, access_expire, 
      token_timestamp, is_active, create_time, 
      update_time)
    values (#{userId,jdbcType=INTEGER}, #{accessToken,jdbcType=VARCHAR}, #{accessExpire,jdbcType=BIGINT}, 
      #{tokenTimestamp,jdbcType=BIGINT}, #{isActive,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.learn.springauthmodel.entity.AuthToken">
    update auth_token
    set user_id = #{userId,jdbcType=INTEGER},
      access_token = #{accessToken,jdbcType=VARCHAR},
      access_expire = #{accessExpire,jdbcType=BIGINT},
      token_timestamp = #{tokenTimestamp,jdbcType=BIGINT},
      is_active = #{isActive,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, user_id, access_token, access_expire, token_timestamp, is_active, create_time, 
    update_time
    from auth_token
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, user_id, access_token, access_expire, token_timestamp, is_active, create_time, 
    update_time
    from auth_token
  </select>
  <resultMap id="BaseResultMap" type="com.learn.mybatis.generator.entity.domain.AuthToken">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="access_token" jdbcType="VARCHAR" property="accessToken" />
    <result column="access_expire" jdbcType="BIGINT" property="accessExpire" />
    <result column="token_timestamp" jdbcType="BIGINT" property="tokenTimestamp" />
    <result column="is_active" jdbcType="TINYINT" property="isActive" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from auth_token
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.learn.mybatis.generator.entity.domain.AuthToken">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into auth_token (user_id, access_token, access_expire, 
      token_timestamp, is_active, create_time, 
      update_time)
    values (#{userId,jdbcType=INTEGER}, #{accessToken,jdbcType=VARCHAR}, #{accessExpire,jdbcType=BIGINT}, 
      #{tokenTimestamp,jdbcType=BIGINT}, #{isActive,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.learn.mybatis.generator.entity.domain.AuthToken">
    update auth_token
    set user_id = #{userId,jdbcType=INTEGER},
      access_token = #{accessToken,jdbcType=VARCHAR},
      access_expire = #{accessExpire,jdbcType=BIGINT},
      token_timestamp = #{tokenTimestamp,jdbcType=BIGINT},
      is_active = #{isActive,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, user_id, access_token, access_expire, token_timestamp, is_active, create_time, 
    update_time
    from auth_token
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, user_id, access_token, access_expire, token_timestamp, is_active, create_time, 
    update_time
    from auth_token
  </select>
</mapper>